{"version":3,"sources":["utils/prismic.js","components/Header.js","components/Footer.js","components/PortfolioSlide.js","components/Portfolio.js","components/SliderPrevButton.js","components/SliderNextButton.js","components/SliderThumbs.js","utils/slider.js","components/Slider.js","components/About.js","components/Contact.js","components/MobileSwipePrompt.js","App.js","index.js"],"names":["Client","Prismic","client","Header","aboutActive","updateAboutActive","thumbsActive","contactActive","toggleModals","href","title","className","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","Footer","updateContactActive","openThumbs","x","y","x1","y1","x2","y2","PortfolioSlide","slideData","slug","name","idx","primary","slice_type","image_one","text","slideImgWidth","window","innerWidth","slideImgHeight","data-hash","data-caption","alt","data-collection","render","data-src","url","Portfolio","id","portfolio","data","find","doc","uid","body","map","s","key","SliderPrevButton","SliderNextButton","SliderThumbs","portfolioList","portfolios","goToSlide","slideIdx","p","port","slideIdxNumForCover","thumbWidth","thumbHeight","slide","subIdx","slideIdxNumForSlide","style","backgroundImage","square","generateThumbGroup","sliderOpts","loop","effect","simulateTouch","keyboardControl","mousewheelControl","spaceBetween","slidesPerView","preloadImages","lazy","loadPrevNext","loadPrevNextAmount","navigation","nextEl","prevEl","hashNavigation","replaceState","changeCaption","swiperObj","slides","activeIndex","dataset","caption","changeCollection","collection","Slider","updateThumbsActive","useState","updateCollection","updateCaption","swiper","updateSwiper","type","filter","params","renderPrevButton","renderNextButton","on","slideChange","this","init","getSwiper","slideToLoop","setTimeout","About","aboutContent","showContactHideOthers","resetWindow","scrollTo","document","scrollTop","Contact","emailStatus","updateEmailStatus","nameElement","useRef","emailElement","messageElement","useEffect","current","onblur","onSubmit","e","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","status","reset","send","placeholder","required","autoComplete","ref","MobilSwipePrompt","overlay","toggleOverlay","clipPath","App","setDocData","getElementsByClassName","a","query","pageSize","response","results","console","log","fetchData","length","MobileSwipePrompt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6cfd373.chunk.js","sourcesContent":["import Prismic from 'prismic-javascript';\n\nexport const api = 'https://slyttlecom.cdn.prismic.io/api/v2'\nexport const Client = Prismic.client(api)","import React from 'react';\n\nfunction Header({ \n\taboutActive, \n\tupdateAboutActive, \n\tthumbsActive, \n\tcontactActive,\n\ttoggleModals\n}) {\n  return (\n    <header>\n\t\t\t<div>\n\t\t\t\t<a href=\"/\" title=\"Scott Lyttle\">Scott Lyttle</a>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{!aboutActive &&\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"link about-toggle\"\n\t\t\t\t\t\tonClick={() => updateAboutActive(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\tAbout\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t\t{(aboutActive || thumbsActive || contactActive) &&\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"overlay-toggle link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleModals()\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M25 1L1 25\" stroke=\"black\" strokeWidth=\"1.5\" strokeLinejoin=\"round\"/>\n\t\t\t\t\t\t\t<path d=\"M1 1L25 25\" stroke=\"black\" strokeWidth=\"1.5\" strokeLinejoin=\"round\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n  )\n}\n\nexport default Header","import React from 'react';\n\nfunction Footer({ \n\tupdateContactActive,\n\topenThumbs \n}) {\n  return (\n    <footer>\n\t\t\t<div \n\t\t\t\tclassName=\"link contact-toggle\"\n\t\t\t\tonClick={() => updateContactActive(true)}\n\t\t\t>\n\t\t\t\t<svg width=\"30\" height=\"25\" viewBox=\"0 0 30 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<rect x=\"0.75\" y=\"0.75\" width=\"28.5\" height=\"23.5\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t\t<path d=\"M1 4L14.6746 15.7211C14.8618 15.8816 15.1382 15.8816 15.3254 15.7211L29 4\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"link thumbs-toggle\"\n\t\t\t\tonClick={() => openThumbs()}\n\t\t\t>\n\t\t\t\t<svg width=\"30\" height=\"25\" viewBox=\"0 0 30 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<rect x=\"0.75\" y=\"0.75\" width=\"28.5\" height=\"23.5\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t\t<line x1=\"10.7495\" y1=\"1.0871\" x2=\"10.7495\" y2=\"23.9132\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t\t<line x1=\"19.5\" y1=\"1.0871\" x2=\"19.5\" y2=\"23.9132\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t\t<line y1=\"9.03265\" x2=\"28.75\" y2=\"9.03265\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t\t<line y1=\"16.6412\" x2=\"28.75\" y2=\"16.6412\" stroke=\"black\" strokeWidth=\"1.5\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t</footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport { RichText } from 'prismic-reactjs';\n\nfunction PortfolioSlide({slideData, slug, name, idx}) {\n  const { primary, slice_type } = slideData;\n  const { image_one, text } = primary;\n  const slideImgWidth = window.innerWidth <= 500 \n    ? 825\n    : window.innerWidth > 500 && window.innerWidth < 1300\n    ? 1011\n    : 1350;\n  const slideImgHeight = window.innerWidth <= 500 \n    ? 550\n    : window.innerWidth > 500 && window.innerWidth < 1300\n    ? 675\n    : 900;\n\n  return (\n    <div\n      data-hash={`${slug}-${idx+1}`}\n      className={`swiper-slide ${slice_type === \"text\" && \"slide-has-text\"}`}\n      data-caption={!!image_one ? image_one.alt : ''}\n      data-collection={name}\n    >\n      <div>\n        {slice_type === \"text\" ? (\n          <div className=\"slide-text\">\n            <RichText render={text} />\n          </div>\n        ) : (\n          <>\n            <img alt=\"\" data-src={`${image_one.url}&fit=clip&w=${slideImgWidth}&h=${slideImgHeight}`} className=\"swiper-lazy\" />\n            <div className=\"swiper-lazy-preloader\"></div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PortfolioSlide","import React from 'react';\n//import PortfolioCover from './PortfolioCover';\nimport PortfolioSlide from './PortfolioSlide';\n\nfunction Portfolio({ \n    id, \n    data\n  }) {\n  const portfolio = data.find(doc => doc.id === id);\n  const slug = portfolio.uid\n  \n  return (\n    <>\n      {/* <PortfolioCover\n        image={portfolio.data.cover_image}\n        name={portfolio.data.name}\n        slug={slug}\n        preheading={portfolio.data.preheading}\n      /> */}\n      {portfolio.data.body.map((s, idx) => \n        <PortfolioSlide\n          key={idx}\n          idx={idx}\n          slug={slug}\n          name={portfolio.data.name}\n          slideData={s}\n        />\n      )}\n    </>\n  )\n}\n\nexport default Portfolio;","import React from 'react';\n\nfunction SliderPrevButton() {\n  return (\n    <div className=\"swiper-button-prev\">\n      <svg width=\"51\" height=\"36\" viewBox=\"0 0 51 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line x1=\"50.1445\" y1=\"18.0001\" x2=\"2.14453\" y2=\"18.0001\" stroke=\"black\" strokeWidth=\"1.5\"/>\n        <path d=\"M19 0.999978L2 18L19 35\" stroke=\"black\" strokeWidth=\"1.5\"/>\n      </svg>\n    </div>\n  )\n}\n\nexport default SliderPrevButton","import React from 'react';\n\nfunction SliderNextButton() {\n  return (\n    <div className=\"swiper-button-next\">\n      <svg width=\"50\" height=\"36\" viewBox=\"0 0 50 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line y1=\"18\" x2=\"48\" y2=\"18\" stroke=\"black\" strokeWidth=\"1.5\"/>\n        <path d=\"M31.1445 35.0001L48.1445 18.0001L31.1445 1.00004\" stroke=\"black\" strokeWidth=\"1.5\"/>\n      </svg>\n    </div>\n  )\n}\n\nexport default SliderNextButton","import React from 'react';\n\nfunction generateThumbGroup(portfolioList, portfolios, goToSlide) {\n  //let slideIdx = -1;\n  let slideIdx = 0;\n  return portfolioList.data.portfolios.map((p, idx) => {\n    const portfolio = portfolios.find(port => port.id === p.portfolio.id)\n    const slideIdxNumForCover = slideIdx;\n    const thumbWidth = window.innerWidth > 500 ? 600 : 150;\n    const thumbHeight = window.innerWidth > 500 ? 600 : 150;\n\n    return (\n      <div key={idx} className=\"thumb-group\">\n        <div className=\"thumb-group-heading\">\n          <p\n            className=\"slide-link muted\"\n            onClick={() => goToSlide(slideIdxNumForCover)}\n          >\n            {portfolio.data.name}\n          </p>\n        </div>\n        <div className=\"thumb-group-items\">\n          {portfolio.data.body.map((slide, subIdx) => {\n            // slideIdx++;\n            // const slideIdxNumForSlide = slideIdx;\n            const slideIdxNumForSlide = slideIdx;\n            slideIdx++;\n\n            return slide.slice_type !== \"text\" \n            ? (\n              <div\n                key={subIdx}\n                className=\"slide-link\"\n                onClick={() => goToSlide(slideIdxNumForSlide)}\n              >\n                <div\n                  className=\"thumb-group-item-image\"\n                  style={{backgroundImage: `url(${!!slide.primary.image_one.square && slide.primary.image_one.square.url}&fit=clip&w=${thumbWidth}&h=${thumbHeight})`}}\n                />\n                {/* <p>{slideIdxNumForSlide}</p> */}\n              </div>\n            ) : false\n          })}\n        </div>\n      </div>  \n    )\n  })\n}\n\nfunction SliderThumbs({portfolioList, portfolios, goToSlide }) {\n  return (\n    <div className=\"thumbs-container\">\n\t\t\t<div className=\"thumbs-inner\">\n        {generateThumbGroup(portfolioList, portfolios, goToSlide)}\n      </div>\n    </div>\n  )\n}\n\nexport default SliderThumbs","export const sliderOpts = {\n  loop: false,\n  effect: window.innerWidth > 500 ? 'fade' : 'slide',\n  simulateTouch: window.innerWidth > 500 ? false : true,\n  keyboardControl: true,\n  mousewheelControl: false,\n  spaceBetween: 0,\n  slidesPerView: 1,\n  preloadImages: false,\n  lazy: true,\n  loadPrevNext: true, \n  loadPrevNextAmount: 4,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  hashNavigation: {\n    replaceState: true,\n  }\n}\n\n// export function checkSlideColour(swiperObj) {\n//   const { slides, activeIndex } = swiperObj;\n//   return !!slides[activeIndex].dataset.color\n//     ? slides[activeIndex].dataset.color\n//     : \"dark\"\n// }\n\nexport function changeCaption(swiperObj) {\n  const { slides, activeIndex } = swiperObj;\n\n  if (slides[activeIndex].dataset.caption) {\n    return slides[activeIndex].dataset.caption\n  } else {\n    return '';\n  }\n}\n\nexport function changeCollection(swiperObj) {\n  const { slides, activeIndex } = swiperObj;\n\n  if (slides[activeIndex].dataset.collection) {\n    return slides[activeIndex].dataset.collection\n  } else {\n    return '';\n  }\n}\n\n// export function slideSlug(str) {\n//   str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n//   str = str.toLowerCase();\n\n//   // remove accents, swap ñ for n, etc\n//   var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n//   var to   = \"aaaaeeeeiiiioooouuuunc------\";\n//   for (var i=0, l=from.length ; i<l ; i++) {\n//       str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n//   }\n\n//   str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n//       .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n//       .replace(/-+/g, '-'); // collapse dashes\n\n//   return str;\n// }","import React, { useState } from 'react';\nimport Swiper from 'react-id-swiper';\nimport Portfolio from './Portfolio';\nimport SliderPrevButton from './SliderPrevButton';\nimport SliderNextButton from './SliderNextButton';\nimport SliderThumbs from './SliderThumbs';\nimport { sliderOpts, changeCaption, changeCollection } from '../utils/slider'; \n\nfunction Slider({ data, openThumbs, updateThumbsActive }) {\n  const [collection, updateCollection] = useState(\"\");\n  const [caption, updateCaption] = useState(\"\");\n  const [swiper, updateSwiper] = useState(null);\n  const portfolioList = data.find(doc => doc.type === \"portfolio_list\");\n  const portfolios = data.filter(doc => doc.type === \"portfolio\");\n  const params = {\n    ...sliderOpts,\n    renderPrevButton: () => <SliderPrevButton />,\n    renderNextButton: () => <SliderNextButton />,\n    on: {\n      slideChange: function() {\n        updateCaption(changeCaption(this));\n        updateCollection(changeCollection(this));\n      },\n      init: function() {\n        updateCaption(changeCaption(this));\n        updateCollection(changeCollection(this));\n      }\n    }    \n  }\n  const goToSlide = (slideIdx) => {\n    if (swiper !== null) {\n      swiper.slideToLoop(slideIdx)\n    }\n    setTimeout(() => updateThumbsActive(false), 200)\n  }\n\n  return (\n    <>\n      <p\n        className=\"collection muted small link\"\n        onClick={() => openThumbs()}\n      >\n        {collection}\n      </p>\n      {!!portfolioList &&\n        <Swiper getSwiper={updateSwiper} {...params}>\n          {portfolioList.data.portfolios.map(p =>\n            <Portfolio \n              key={p.portfolio.id} \n              id={p.portfolio.id} \n              data={portfolios}\n            />\n          )}\n        </Swiper>\n      }\n      <SliderThumbs\n        portfolioList={portfolioList}\n        portfolios={portfolios}\n        goToSlide={goToSlide}\n      />\n      <p className=\"caption muted small\">{caption}</p>\n    </>\n  )\n}\n\nexport default Slider;","import React from 'react';\nimport { RichText } from 'prismic-reactjs';\n\nfunction showContactHideOthers(updateAboutActive, updateContactActive, updateThumbsActive) {\n\tupdateContactActive(true);\n\tsetTimeout(() => {\n\t\tupdateAboutActive(false);\n\t\tupdateThumbsActive(false);\n\t}, 300)\n}\n\nfunction About({ \n\tdata,\n\tupdateAboutActive,\n\tupdateContactActive,\n\tupdateThumbsActive\n}) {\n\tconst aboutContent = data.find(d => d.type === \"about\");\n\t\n  return (\n    <div className=\"about-container\">\n\t\t\t<div className=\"about-inner\">\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"muted\">About</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText render={aboutContent.data.text} />\n\t\t\t\t\t<p>Helsinki, Finland\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"link underline\"\n\t\t\t\t\t\t\tonClick={() => showContactHideOthers(updateAboutActive, updateContactActive, updateThumbsActive)}\n\t\t\t\t\t\t>Get in touch</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  )\n}\n\nexport default About;","import React, { useState, useRef, useEffect } from 'react';\n\nfunction resetWindow() {\n  window.scrollTo(0, 0);\n  document.body.scrollTop = 0;\n}\n\nfunction Contact() {\n  const [emailStatus, updateEmailStatus] = useState(\"\");\n  const nameElement = useRef(null);\n  const emailElement = useRef(null);\n  const messageElement = useRef(null);\n\n  useEffect(() => {\n    nameElement.current.onblur = () => resetWindow();\n    emailElement.current.onblur = () => resetWindow();\n    messageElement.current.onblur = () => resetWindow();\n  });\n\n  return (\n    <div className=\"contact-container\">\n\t\t\t<div className=\"contact-inner\">\n        <div>\n\t\t\t\t\t<span className=\"muted\">Contact</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n          <p>Want to collaborate or just say hi? Get in touch through the form below.</p>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const form = e.target;\n              const data = new FormData(form);\n              const xhr = new XMLHttpRequest();\n              xhr.open(form.method, form.action);\n              xhr.setRequestHeader(\"Accept\", \"application/json\");\n              xhr.onreadystatechange = () => {\n                if (xhr.readyState !== XMLHttpRequest.DONE) return;\n                if (xhr.status === 200) {\n                  form.reset();\n                  updateEmailStatus(\"SUCCESS\");\n                } else {\n                  updateEmailStatus(\"ERROR\");\n                }\n              };\n              xhr.send(data);\n            }}\n            action=\"https://formspree.io/xjvavbpp\"\n            method=\"POST\"\n          >\n            <input\n              type=\"text\" \n              name=\"name\" \n              placeholder=\"Name\" \n              required\n              autoComplete=\"off\"\n              ref={nameElement}\n            />\n            <input \n              type=\"email\" \n              name=\"email\" \n              placeholder=\"Email\" \n              required\n              autoComplete=\"off\"\n              ref={emailElement}\n            />\n            <textarea \n              name=\"message\" \n              placeholder=\"Message\" \n              required\n              autoComplete=\"off\"\n              ref={messageElement}\n            />\n            {emailStatus === \"SUCCESS\"\n              ? <p>Message sent</p>\n              : <button>Send</button>\n            }\n            {emailStatus === \"ERROR\" && <p>Ooops! There was an error.</p>}\n          </form>\n\t\t\t\t</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact;","import React, { useEffect, useState } from 'react';\n\nfunction MobilSwipePrompt() {\n  const [overlay, toggleOverlay] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      toggleOverlay(false)\n    }, 3000)\n  })\n\n  return (\n    <div\n      className={`mobile-overlay ${overlay && \"active\"}`}\n      onClick={() => toggleOverlay(false)}\n    >\n      <svg width=\"27\" height=\"31\" viewBox=\"0 0 27 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n          <path d=\"M25.5551 16.3965L21.5426 10.0615C21.5426 10.0615 21.5426 10.061 21.5426 10.0605C20.6481 8.6495 18.7721 8.2285 17.3626 9.1225C16.8486 9.448 16.4671 9.905 16.2316 10.4225C16.0076 10.3085 15.7731 10.212 15.5211 10.1555C14.7331 9.978 13.9206 10.119 13.2376 10.5515C12.7336 10.8705 12.3466 11.321 12.1051 11.8515C11.8811 11.7375 11.6471 11.641 11.3956 11.5845C10.6061 11.4075 9.79464 11.5485 9.11214 11.981C8.75014 12.2105 8.45214 12.5105 8.22064 12.8555L5.57414 8.6765C4.68114 7.266 2.80664 6.8455 1.39514 7.738C-0.0158571 8.6315 -0.437357 10.5065 0.456642 11.9175L9.66614 26.46C11.4541 29.283 14.5076 30.829 17.6251 30.829C19.3446 30.829 21.0846 30.3595 22.6416 29.373C27.0231 26.5975 28.3296 20.7775 25.5551 16.3965ZM21.6751 27.8455C18.1356 30.085 13.4346 29.031 11.1941 25.492L1.98314 10.9495C1.62314 10.3805 1.79314 9.625 2.36164 9.2645C2.93064 8.905 3.68614 9.074 4.04614 9.643L11.0491 20.7015C11.2211 20.973 11.5141 21.1215 11.8136 21.1215C11.9791 21.1215 12.1466 21.0765 12.2961 20.981C12.7181 20.7145 12.8431 20.156 12.5761 19.734L9.70214 15.1955L9.70064 15.1925C9.52614 14.917 9.46964 14.5905 9.54064 14.272C9.61214 13.9535 9.80314 13.682 10.0791 13.508C10.3541 13.333 10.6816 13.2765 10.9991 13.3485C11.3176 13.4205 11.5891 13.611 11.7636 13.8865L14.6396 18.4275C14.8116 18.699 15.1046 18.8485 15.4041 18.8485C15.5691 18.8485 15.7366 18.8025 15.8866 18.708C16.3086 18.4405 16.4336 17.882 16.1671 17.46L13.8271 13.766C13.8266 13.7655 13.8261 13.7645 13.8261 13.764C13.6511 13.4885 13.5946 13.162 13.6656 12.8435C13.7371 12.525 13.9281 12.254 14.2041 12.08C14.4796 11.905 14.8056 11.8475 15.1251 11.92C15.4436 11.992 15.7146 12.1825 15.8886 12.458C15.8891 12.4585 15.8896 12.459 15.8896 12.459L16.4191 13.295C16.4211 13.298 16.4221 13.3005 16.4236 13.303C16.4241 13.304 16.4251 13.305 16.4261 13.306L18.2296 16.155C18.4021 16.4265 18.6951 16.576 18.9941 16.576C19.1596 16.576 19.3271 16.53 19.4771 16.4355C19.8991 16.168 20.0246 15.6095 19.7571 15.188L17.9506 12.3345C17.5921 11.765 17.7621 11.0115 18.3296 10.6515C18.8991 10.2915 19.6546 10.4615 20.0151 11.03C20.0151 11.0305 20.0151 11.031 20.0156 11.031L24.0276 17.366C26.2686 20.9025 25.2136 25.6045 21.6751 27.8455ZM7.29764 4.905L10.3261 6.481C10.4596 6.551 10.6021 6.5835 10.7426 6.5835C11.0686 6.5835 11.3841 6.4065 11.5451 6.097C11.7756 5.6535 11.6036 5.1075 11.1606 4.8775L10.0466 4.298C13.2936 3.435 16.7136 3.651 19.8701 4.9585C19.9836 5.0055 20.1006 5.028 20.2156 5.028C20.5701 5.028 20.9071 4.818 21.0511 4.4695C21.2421 4.0085 21.0231 3.48 20.5616 3.289C17.0201 1.821 13.1796 1.581 9.53764 2.5585L10.0926 1.4925C10.3231 1.0495 10.1511 0.503499 9.70814 0.273499C9.26514 0.0419989 8.71914 0.214998 8.48914 0.657998L6.91264 3.686C6.80164 3.899 6.78014 4.147 6.85214 4.3755C6.92514 4.6035 7.08514 4.794 7.29764 4.905Z\" fill=\"white\"/>\n        </g>\n        <defs>\n          <clipPath id=\"clip0\">\n            <rect width=\"27\" height=\"31\" fill=\"white\"/>\n          </clipPath>\n        </defs>\n      </svg>\n      <p>Swipe to navigate</p>\n    </div>\n  )\n}\n\nexport default MobilSwipePrompt;","import React, { useEffect, useState } from 'react';\nimport { Client } from './utils/prismic';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Slider from './components/Slider';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport MobileSwipePrompt from './components/MobileSwipePrompt';\nimport './style/app.scss';\n\nfunction App() {\n  const [doc, setDocData] = useState([]);\n  const [aboutActive, updateAboutActive] = useState(false);\n  const [thumbsActive, updateThumbsActive] = useState(false);\n  const [contactActive, updateContactActive] = useState(false);\n  const toggleModals = () => {\n    updateAboutActive(false)\n    updateContactActive(false)\n    updateThumbsActive(false)\n  }\n  const openThumbs = () => {\n    const thumbs = document.getElementsByClassName('thumbs-inner')[0];\n    thumbs.scrollTop = 0;\n    updateThumbsActive(true)\n  }\n\n\tuseEffect(() => {\n    const fetchData = async () => {\n      const response = await Client.query('', { pageSize: 200 })\n      if (response) {\n        setDocData(response.results)\n      } else {\n        console.log('no bueno')\n      }\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <div className={`page_wrap ${aboutActive ? 'about-active' : ''} ${thumbsActive ? 'thumbs-active' : ''} ${contactActive ? 'contact-active' : ''}`}>\n      <Header\n        toggleModals={toggleModals}\n        aboutActive={aboutActive}\n        updateAboutActive={updateAboutActive}\n        thumbsActive={thumbsActive}\n        contactActive={contactActive}\n      />\n      {!!doc.length\n        ? <>\n            <Slider\n              data={doc}\n              openThumbs={openThumbs}\n              updateThumbsActive={updateThumbsActive} \n            />\n            <About\n              data={doc}\n              updateAboutActive={updateAboutActive}\n              updateThumbsActive={updateThumbsActive}\n              updateContactActive={updateContactActive}\n            />\n            <Contact />\n          </> \n        : <div className=\"swiper-lazy-preloader\"></div>\n      }\n      {!aboutActive && !contactActive && !thumbsActive &&\n        <Footer\n          openThumbs={openThumbs}\n          updateContactActive={updateContactActive}\n        />\n      }\n      <MobileSwipePrompt />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}